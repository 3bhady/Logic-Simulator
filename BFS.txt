#include <iostream>
#include <queue>
#include <bits/stdc++.h>

using namespace std;
int arr1[100][100];
pair<int , int> arr[100][100];
bool vis[100][100];
int n;
bool isvalid( int x , int y )
{
	if ( x<n&&y<n )
		if ( x >= 0 && y >= 0 )
		{
			if ( vis[x][y] == 0 )
				if ( arr1[x][y] == 0 )
					return true;

		}
	return false;
}
void bfs( int x1 , int y1 , int x2 , int y2 )
{
	queue< pair<int , int> > qu;

	qu.push( make_pair( x1 , y1 ) );
	while ( !qu.empty( ) )
	{
		pair<int , int> pr = qu.front( );
		vis[pr.first][pr.second] = 1;
		qu.pop( );
		if ( isvalid( pr.first + 1 , pr.second ) )
		{
			qu.push( make_pair( pr.first + 1 , pr.second ) );
			arr[pr.first + 1][pr.second] = make_pair( pr.first , pr.second );
			vis[pr.first + 1][pr.second] = 1;
			if ( qu.back( ).first == x2 && qu.back( ).second == y2 )
				break;
		}

		if ( isvalid( pr.first , pr.second + 1 ) )
		{
			qu.push( make_pair( pr.first , pr.second + 1 ) );
			arr[pr.first][pr.second + 1] = make_pair( pr.first , pr.second );
			vis[pr.first][pr.second + 1] = 1;	   if ( qu.back( ).first == x2 && qu.back( ).second == y2 )
				break;
		}

		if ( isvalid( pr.first - 1 , pr.second ) )
		{
			qu.push( make_pair( pr.first - 1 , pr.second ) );
			arr[pr.first - 1][pr.second] = make_pair( pr.first , pr.second );
			vis[pr.first - 1][pr.second] = 1;	if ( qu.back( ).first == x2 && qu.back( ).second == y2 )
				break;
		}

		if ( isvalid( pr.first , pr.second - 1 ) )
		{
			qu.push( make_pair( pr.first , pr.second - 1 ) );
			arr[pr.first][pr.second - 1] = make_pair( pr.first , pr.second );
			vis[pr.first][pr.second - 1] = 1;	   if ( qu.back( ).first == x2 && qu.back( ).second == y2 )
				break;
		}


	}

}

int main( )
{
	cout << "enter the dimensions" << endl;
	cin >> n;
	cout << "enter the array" << endl;
	memset( vis , 0 , sizeof( vis ) );
	for ( int i = 0; i<n; i++ )
		for ( int j = 0; j<n; j++ )
			cin >> arr1[i][j];
	int x1 , y1 , x2 , y2;
	cout << "enter the source and destination" << endl;
	cin >> x1 >> y1 >> x2 >> y2;
	bfs( x1 , y1 , x2 , y2 );
	//vis[x1][y1] = 1;
	int a = x2 , b = y2;
	if(!vis[x2][y2])
    {cout<<"error"<<endl;return 0; }
	while ( true )
	{
		if ( a == x1&&b == y1 )break;
		cout << arr[a][b].first << " " << arr[a][b].second << endl;
		int x = a;
		a = arr[a][b].first , b = arr[x][b].second;

	}

	return 0;
}





/*4
0 0 0 0
0 1 1 0
0 0 1 0
0 0 0 0
1 0
0 3*/
